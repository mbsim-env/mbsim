// wrap MBSim with directors (and all protected class data)
%module(directors="1", allprotected="1") mbsimControl

// include the general mbsim SWIG configuration (used by all MBSim modules)
%import  "@prefix@/share/mbsim/fmatvec.i"
%include "@prefix@/share/mbsim/mbsim_include.i"
%import  "@prefix@/share/mbsim/_mbsim_part050.i"

// includes needed in the generated swig c++ code
%{
namespace MBSim {
  class ContourFrame;
  class FunctionBase;
  template<typename Sig> class Function;
  class GlobalCriteriaFunction;
  class GlobalResidualCriteriaFunction;
  class CriteriaFunction;
  class DampingFunction;
  class FixedContourFrame;
  class FixedRelativeFrame;
  class FloatingContourFrame;
  class FloatingRelativeContourFrame;
  class FloatingRelativeFrame;
  class MechanicalLink;
  class FrameLink;
  class FuncPairPlanarContourPoint;
  class GlobalShiftCriteriaFunction;
  class LocalCriteriaFunction;
  class LocalResidualCriteriaFunction;
  class LocalShiftCriteriaFunction;
  class NewtonJacobianFunction;
  class NumericalNewtonJacobianFunction;
  class StandardDampingFunction;
}
#include <config.h> // to use consistent preprocessor defines
#include "mbsimControl/signal_.h"
#include "mbsimControl/sensor.h"
#include "mbsimControl/link_sensors.h"
#include "mbsimControl/frame_sensors.h"
#include "mbsimControl/signal_sensors.h"
%}

%include "mbsimControl/signal_.h"
%include "mbsimControl/sensor.h"
%include "mbsimControl/link_sensors.h"
%include "mbsimControl/frame_sensors.h"
%include "mbsimControl/signal_sensors.h"

%pythoncode %{

# XML namespace of this module (prefixed with { and postfixed with })
NS="{http://www.mbsim-env.de/MBSimControl}"

%}
